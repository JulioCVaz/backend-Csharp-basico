<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zAz+A6jG7Zfgr188AAAAAElFTkSuQmCC
</value>
  </data>
</root>